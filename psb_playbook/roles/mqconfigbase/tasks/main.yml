#main MQ multi instance configuration yml

#TODO: other possible version: include generic task for creating QM, in which is decided to create single-instance, multi-instance-prim. or -sec.
#then also do this with adding and with starting mq
- name: create multi-instance queue managers 
  import_tasks: create_multi_instance.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ common.mq.directories.onhosts.required.installation_dir }}bin"
    
- name: create single-instance queue managers
  import_tasks: create_single_instance.yml
  become_user: "{{ common.mq.user }}"
  become: yes

- name: add passive queue managers 
  import_tasks: add_passive.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  
- name: start queue managers 
  import_tasks: start_qmgrs.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  
- name: create listeners
  import_tasks: create_listener.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  
- name: create server connection channel
  import_tasks: create_srv_conn_channel.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  
- name: enable MQTT service
  import_tasks: enable_mqtt_service.yml
  become_user: "{{ common.mq.user }}"
  become: yes
  
- name: create MQTT channel
  import_tasks: create_mqtt_channel.yml
  become_user: "{{ common.mq.user }}"
  tags: test
  
- name: create queue
  import_tasks: create_mqtt_queue.yml
  become_user: "{{ common.mq.user }}"
  tags: test
  
- name: create topic
  import_tasks: create_topic.yml
  become_user: "{{ common.mq.user }}"
  tags: test
  
- name: create subscripton
  import_tasks: create_subscription.yml
  become_user: "{{ common.mq.user }}"
  tags: test