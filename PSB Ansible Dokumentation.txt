Documentation Ansible


# Installation Ansible
yum install ansible



###### SSH connection to remote host

# Configure SSH with private key
ssh-add /path/to/private/key/key.pem






###### Mount shared FS 

### On server

# Install and start nfs-server
yum install nfs-server
systemctl start nfs-server

# Add groups and users with explicit IDs
groupadd -g 1001 mqm
useradd mqm -u 1001 -g mqm
groupadd -g 1002 mqbrkrs
useradd mqbrkr -u 1002 -g mqbrkrs -G mqm

# Make directories
mkdir /IIBHA/var/mqsi
mkdir /MQHA/var/mqm/qmgrs
mkdir /MQHA/var/mqm/logs
chown mqm:mqm -R /MQHA
chown mqbrkr:mqbrkrs -R /IIBHA
chmod -R ug+rwx /MQHA
chmod -R ug+rwx /IIBHA

# Edit exports
vi /etc/exports
# Add following lines (* means all hosts/IPs in the network). Other options: https://linux.die.net/man/5/exports
/IIBHA/var/mqsi          *(rw,sync,no_wdelay)
/MQHA/var/mqm/qmgrs      *(rw,sync,no_wdelay)
/MQHA/var/mqm/logs       *(rw,sync,no_wdelay)

# Restart
systemctl restart nfs-server

# add the NFS service override in CentOS 7 firewall-cmd public zone service
firewall-cmd --permanent --zone=public --add-service=nfs
firewall-cmd --permanent --zone=public --add-service=mountd
firewall-cmd --permanent --zone=public --add-service=rpc-bind
firewall-cmd --reload


### On client

# make the directory where you want to mount you FS
mkdir -p /IIBHA/var/mqsi
mkdir -p /MQHA/var/mqm/qmgrs
mkdir -p /MQHA/var/mqm/logs
chown mqm:mqm -R /MQHA
chown mqbrkr:mqbrkrs -R /IIBHA
chmod -R ug+rwx /MQHA
chmod -R ug+rwx /IIBHA

# Mount FS of type nfs4
mount -t nfs4 -o hard,intr 192.168.100.30:/IIBHA/var/mqsi /IIBHA/var/mqsi
mount -t nfs4 -o hard,intr 192.168.100.30:/MQHA/var/mqm/qmgrs /MQHA/var/mqm/qmgrs
mount -t nfs4 -o hard,intr 192.168.100.30:/MQHA/var/mqm/logs /MQHA/var/mqm/logs

# Unmount (if FS busy, list the procs using it e.g. "lsof /IIBHA/var/mqsi")
umount /IIBHA/var/mqsi
umount /MQHA/var/mqm/logs
umount /MQHA/var/mqm/qmgrs

# Mount shared FS at boot timystemctl restart nfs-server
TBD




###### Run Ansbible Playbooks

# Test ansible local connection on host to host using verbose logging
ansible localhost -c local -m ping -vvv

# Test ansible local connection on host to host using local inventory file hosts using verbose logging
ansible -i hosts all -c local -m ping -vvv

# Run ansbible playbook from client to host
ansible-playbook -i hosts psb.yml

# Run ansbible playbook from client to host using tags
ansible-playbook -i hosts psb.yml --tags "installiib"

# Run ansbile playbook on host using local connection
ansible-playbook -i hosts -c local psb.yml

# Run ansbile playbook on host using local connection with password prompt for root user (ensure executed playbook has entry "become: true")
ansible-playbook -i hosts -c local psb.yml --ask-become-pass

# Run ansible playbook with tags to execute only a specific task (here install IIB)
ansible-playbook -i hosts -c local psb.yml --ask-become-pass --tags "installiib"

# Run ansible playbook with tags to execute only a specific task (here install IIB) and verbose logging
ansible-playbook -i hosts -c local psb.yml --ask-become-pass --tags "installiib" -vvv

# Install both, IIB and MQ
ansible-playbook -i hosts psb.yml -c local --ask-become-pass --tags "install,installiib"


# Display all tasks or hosts for a certain stage, role, geography or tags
ansible-playbook -i production webservers.yml --tags ntp --list-tasks
ansible-playbook -i production webservers.yml --limit boston --list-hosts


# Password vault

# Create
ansible-vault create vault.yml

# Decrypt
ansible-vault decrypt --ask-vault-pass vault.yml

# Encrypt 
ansible-vault encrypt vault.yml
